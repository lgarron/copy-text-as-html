{"version":3,"sources":["../clipboard-polyfill.ts","../DT.ts","index.ts"],"names":["text","dataTypes","warn","console","log","call","arguments","bind","showWarnings","this","DT","type","value","indexOf","m","f","k","debugLog","s","apply","TEXT_PLAIN","setDebugLog","suppressWarnings","write","data","getData","seemToBeInIE","window","clipboardData","setData","Error","execCopy","navigator","userAgent","copyUsingTempSelection","document","body","tempElem","createElement","setAttribute","textContent","appendChild","success","removeChild","str","spanParent","attachShadow","mode","span","innerText","selectionSet","result","execCommand","selectionClear","writeText","clipboard","DTFromText","read","_a","readText","_b","readIE","useStarShown","useStar","ClipboardPolyfillDefault","tracker","FallbackTracker","listener","e","forEach","key","preventDefault","addEventListener","removeEventListener","elem","sel","getSelection","range","createRange","selectNodeContents","removeAllRanges","addRange","dt","ClipboardEvent"],"mappings":";AAwSSA,aAAAA,SAAAA,EAAAA,EAAAA,EAAAA,EAAAA,GAAAA,OAAAA,IAAAA,IAAAA,EAAAA,UAAAA,SAAAA,EAAAA,GAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,KAAAA,IAAAA,MAAAA,GAAAA,EAAAA,IAAAA,SAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,MAAAA,IAAAA,MAAAA,GAAAA,EAAAA,IAAAA,SAAAA,EAAAA,GAAAA,EAAAA,KAAAA,EAAAA,EAAAA,OAAAA,IAAAA,EAAAA,SAAAA,GAAAA,EAAAA,EAAAA,SAAAA,KAAAA,EAAAA,GAAAA,GAAAA,EAAAA,EAAAA,MAAAA,EAAAA,GAAAA,KAAAA,UAAAA,SAAAA,EAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,EAAAA,CAAAA,MAAAA,EAAAA,KAAAA,WAAAA,GAAAA,EAAAA,EAAAA,GAAAA,MAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,KAAAA,GAAAA,IAAAA,IAAAA,OAAAA,EAAAA,CAAAA,KAAAA,EAAAA,GAAAA,MAAAA,EAAAA,GAAAA,OAAAA,EAAAA,IAAAA,mBAAAA,SAAAA,EAAAA,OAAAA,UAAAA,WAAAA,OAAAA,OAAAA,EAAAA,SAAAA,EAAAA,GAAAA,OAAAA,SAAAA,GAAAA,OAAAA,SAAAA,GAAAA,GAAAA,EAAAA,MAAAA,IAAAA,UAAAA,mCAAAA,KAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,OAAAA,EAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,SAAAA,EAAAA,KAAAA,GAAAA,GAAAA,EAAAA,SAAAA,EAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,KAAAA,OAAAA,EAAAA,OAAAA,EAAAA,EAAAA,IAAAA,EAAAA,CAAAA,EAAAA,EAAAA,GAAAA,EAAAA,QAAAA,EAAAA,IAAAA,KAAAA,EAAAA,KAAAA,EAAAA,EAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,QAAAA,CAAAA,MAAAA,EAAAA,GAAAA,MAAAA,GAAAA,KAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,GAAAA,SAAAA,KAAAA,EAAAA,EAAAA,EAAAA,IAAAA,MAAAA,EAAAA,KAAAA,MAAAA,SAAAA,QAAAA,KAAAA,GAAAA,EAAAA,EAAAA,MAAAA,OAAAA,GAAAA,EAAAA,EAAAA,OAAAA,MAAAA,IAAAA,EAAAA,IAAAA,IAAAA,EAAAA,IAAAA,CAAAA,EAAAA,EAAAA,SAAAA,GAAAA,IAAAA,EAAAA,MAAAA,GAAAA,EAAAA,GAAAA,EAAAA,IAAAA,EAAAA,GAAAA,EAAAA,IAAAA,CAAAA,EAAAA,MAAAA,EAAAA,GAAAA,MAAAA,GAAAA,IAAAA,EAAAA,IAAAA,EAAAA,MAAAA,EAAAA,GAAAA,CAAAA,EAAAA,MAAAA,EAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAAAA,GAAAA,EAAAA,MAAAA,EAAAA,GAAAA,CAAAA,EAAAA,MAAAA,EAAAA,GAAAA,EAAAA,IAAAA,KAAAA,GAAAA,MAAAA,EAAAA,IAAAA,EAAAA,IAAAA,MAAAA,EAAAA,KAAAA,MAAAA,SAAAA,EAAAA,EAAAA,KAAAA,EAAAA,GAAAA,MAAAA,GAAAA,EAAAA,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,QAAAA,EAAAA,EAAAA,EAAAA,GAAAA,EAAAA,EAAAA,GAAAA,MAAAA,EAAAA,GAAAA,MAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAAA,QAAAA,EAAAA,MAAAA,GAAAA,CAAAA,CAAAA,EAAAA,MAAAA,OAAAA,eAAAA,QAAAA,aAAAA,CAAAA,OAAAA,IAAAA,QAAAA,KAAAA,EAAAA,QAAAA,SAAAA,EAAAA,QAAAA,YAAAA,EAAAA,QAAAA,iBAAAA,EAAAA,QAAAA,MAAAA,EAAAA,QAAAA,UAAAA,EAAAA,QAAAA,GAAAA,QAAAA,aAAAA,ECxST,IAAMC,EAAY,CAChB,aACA,aAQIC,EAJN,YAEGC,QAAQD,MAAQC,QAAQC,KAAKC,KAAKC,YAEdC,KAAKJ,QAAS,wBACjCK,GAAAA,EAKJ,EAAA,WAAA,SAAA,IACUC,KAAAA,EAA6B,GAE9BC,OAAAA,EAAAA,UAAAA,QAAP,SAAeC,EAAcC,GACvBJ,IAA6C,IAA7BP,EAAUY,QAAQF,IACpCT,EAAK,sBAAwBS,EAAM,+DAIrCF,KAAKK,EAAEH,GAAQC,GAGVF,EAAAA,UAAAA,QAAP,SAAeC,GACNF,OAAAA,KAAKK,EAAEH,IAITD,EAAAA,UAAAA,QAAP,SAAeK,GAER,IAAA,IAAMC,KAAKP,KAAKK,EACnBC,EAAEN,KAAKK,EAAEE,GAAIA,IAAAA,EApBnB,GDXIC,EAAgC,SAACC,KACjCV,GAAAA,EAkSKR,QAAAA,GAAAA,EA1RT,IAAME,EAJN,YAEGC,QAAQD,MAAQC,QAAQC,KAAKe,MAAMhB,QAASG,YAExBC,KAAK,wBAEtBa,EAAa,aAAA,SAIHC,EAAYN,GAC1BE,EAAWF,EAGb,SAAgBO,IACdd,GAAAA,ECZAA,GAAAA,EAAe,SDgBKe,EAAMC,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GACtBhB,GAAAA,IAAiBgB,EAAKC,QAAQL,IAChClB,EAAK,wLAOHwB,IAAgB,CAiPtB,GAAA,SAAiBF,GAGTxB,IAAAA,EAnPQwB,EAmPIC,QAAQL,GAC1B,QAAA,IAAIpB,EACF,OAAQ2B,OAAoBC,cAAcC,QAAQ,OAAQ7B,GAGtD,MAAA,IAAI8B,MAAAA,wCARZ,GA/OM,MAAA,CAAA,GAEM,MAAA,IAAIA,MAAM,0DAIhBC,GAAAA,EAASP,GAEX,OADAP,EAAS,2BAAA,CAAA,GAMPe,GAAAA,UAAUC,UAAUpB,QAAQ,SAAW,EAEzC,OADAI,EAAS,iCAAA,CAAA,GAKPiB,GAAAA,EAAuBC,SAASC,KAAMZ,GAExC,OADAP,EAAS,iCAAA,CAAA,GAmIb,GAAA,SAA2BO,GACnBa,IAAAA,EAAWF,SAASG,cAAc,OAGxCD,EAASE,aAAa,QAAS,wCAE/BF,EAASG,YAAc,oBACvBL,SAASC,KAAKK,YAAYJ,GAEpBK,IAAAA,EAAUR,EAAuBG,EAAUb,GAEjDW,OAAAA,SAASC,KAAKO,YAAYN,GACnBK,EAZT,CA9HwBlB,GAEpB,OADAP,EAAS,4BAAA,CAAA,GAMX,QAAA,KADMjB,EAAOwB,EAAKC,QAAQL,KAwI5B,SAA0BwB,GACxB3B,EAAS,oBAEHoB,IAAAA,EAAWF,SAASG,cAAc,OAGxCD,EAASE,aAAa,QAAS,wCAE3BM,IAAAA,EAAmBR,EACnBA,EAASS,eACX7B,EAAS,qBACT4B,EAAaR,EAASS,aAAa,CAACC,KAAM,UAGtCC,IAAAA,EAAOb,SAASG,cAAc,QACpCU,EAAKC,UAAYL,EAEjBC,EAAWJ,YAAYO,GACvBb,SAASC,KAAKK,YAAYJ,GAC1Ba,EAAaF,GAEPG,IAAAA,EAAShB,SAASiB,YAAY,QAEpCC,OAAAA,IACAlB,SAASC,KAAKO,YAAYN,GAEnBc,EA1BT,CAvI6CnD,GAEzC,OADAiB,EAAS,2BAAA,CAAA,GAIL,MAAA,IAAIa,MAAM,4BAAA,SAGIwB,EAAUpC,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GAC1Bc,OAAAA,UAAUuB,WAAavB,UAAUuB,UAAUD,WAC7CrC,EAAS,4CAAA,CAAA,EACFe,UAAUuB,UAAUD,UAAUpC,KAAAA,CAAAA,EAEhCK,EAAMiC,EAAWtC,SAG1B,SAAsBuC,IAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GAAAA,OAAAA,EAAAA,OAAAA,KAAAA,EACbC,OAAAA,EAAAF,EAAAA,CAAAA,EAAiBG,KAAAA,KAAAA,EAAxB,MAAA,CAAA,EAAOD,EAAAA,WAAAA,EAAAA,CAAWE,EAAAA,eAGpB,SAAsBD,IAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GAChB3B,GAAAA,UAAUuB,WAAavB,UAAUuB,UAAUI,SAE7C,OADA1C,EAAS,2CAAA,CAAA,EACFe,UAAUuB,UAAUI,YAEzBjC,GAAAA,IAEF,OADAT,EAAS,mCAAA,CAAA,EACF4C,KAEH,MAAA,IAAI/B,MAAM,8CAGlB,IAAIgC,GAAAA,EACJ,SAASC,IACHD,IAGAtD,GACFN,EAAK,wNAEP4D,GAAAA,GAGF,IAAME,EAA2B,CAC/BtD,GAAAA,EACAW,YAAA,SAAYN,GACVgD,OAAAA,IACO1C,EAAYN,IAErBO,iBAAAA,WACEyC,OAAAA,IACOzC,KAEHC,MAAN,SAAYC,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GACVuC,OAAAA,IAAAA,CAAAA,EACOxC,EAAMC,SAET8B,UAAN,SAAgBpC,GAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GACd6C,OAAAA,IAAAA,CAAAA,EACOT,EAAUpC,SAEbuC,KAAN,WAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,OAAA,EAAA,KAAA,SAAA,GACEM,OAAAA,IAAAA,CAAAA,EACON,UAEHE,SAAN,WAAA,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,OAAA,EAAA,KAAA,SAAA,GACEI,OAAAA,IAAAA,CAAAA,EACOJ,WAAAA,EAQX,WACSlD,KAAAA,SAAAA,GAiBT,SAASsB,EAASP,GACVyC,IAAAA,EAAU,IAAIC,EACdC,EAhBR,SAAsBF,EAA0BzC,EAAU4C,GACxDnD,EAAS,mBACTgD,EAAQvB,SAAAA,EACRlB,EAAK6C,QAAQ,SAACzD,EAAe0D,GACrB1C,IAAAA,EAAgBwC,EAAExC,cACxBA,EAAcC,QAAQyC,EAAK1D,GACvB0D,IAAQlD,GAAcQ,EAAcH,QAAQ6C,KAAS1D,IACvDK,EAAS,6BACTgD,EAAQvB,SAAAA,KAGZ0B,EAAEG,kBAK4BhE,KAAKE,KAAMwD,EAASzC,GAElDW,SAASqC,iBAAiB,OAAQL,GAClC,IAIEhC,SAASiB,YAAY,QAAA,QAErBjB,SAASsC,oBAAoB,OAAQN,GAEhCF,OAAAA,EAAQvB,QAIjB,SAASR,EAAuBkC,EAAgB5C,GAC9C0B,EAAakB,GACP1B,IAAAA,EAAUX,EAASP,GACzB6B,OAAAA,IACOX,EAoDT,SAASQ,EAAawB,GACdC,IAAAA,EAAMxC,SAASyC,eACjBD,GAAAA,EAAK,CACDE,IAAAA,EAAQ1C,SAAS2C,cACvBD,EAAME,mBAAmBL,GACzBC,EAAIK,kBACJL,EAAIM,SAASJ,IAIjB,SAASxB,IACDsB,IAAAA,EAAMxC,SAASyC,eACjBD,GACFA,EAAIK,kBAMR,SAASxB,EAAWtC,GACZgE,IAAAA,EAAK,IAAIxE,EACfwE,OAAAA,EAAGrD,QAAQT,EAAYF,GAChBgE,EAaT,SAASxD,IAC0B,MAAA,oBAAnByD,qBAAAA,IACCxD,OAAoBC,oBAAAA,IACpBD,OAAoBC,cAAcC,QAenD,SAAegC,IAAAA,OAAAA,EAAAA,UAAAA,OAAAA,EAAAA,WAAAA,IAAAA,EAAAA,OAAAA,EAAAA,KAAAA,SAAAA,GAEA,GAAA,MADP7D,EAAQ2B,OAAoBC,cAAcH,QAAQ,SAEtD,MAAM,IAAIK,MAAM,+DAElB,MAAA,CAAA,EAAO9B,OAAAA,IAAAA,EAAAA,EAAAA,QAAAA,QAAAA;;AEtST,aAAA,IAAA,EAAA,MAAA,KAAA,WAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,IAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,MAAA,IAAA,MAAA,GAAA,EAAA,IAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,MAAA,aAAA,EAAA,EAAA,IAAA,EAAA,SAAA,GAAA,EAAA,MAAA,KAAA,EAAA,GAAA,GAAA,EAAA,EAAA,MAAA,EAAA,GAAA,KAAA,WAAA,EAAA,MAAA,KAAA,aAAA,SAAA,EAAA,GAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CAAA,MAAA,EAAA,KAAA,WAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,KAAA,GAAA,IAAA,IAAA,OAAA,EAAA,CAAA,KAAA,EAAA,GAAA,MAAA,EAAA,GAAA,OAAA,EAAA,IAAA,mBAAA,SAAA,EAAA,OAAA,UAAA,WAAA,OAAA,OAAA,EAAA,SAAA,EAAA,GAAA,OAAA,SAAA,GAAA,OAAA,SAAA,GAAA,GAAA,EAAA,MAAA,IAAA,UAAA,mCAAA,KAAA,GAAA,IAAA,GAAA,EAAA,EAAA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,SAAA,EAAA,KAAA,GAAA,GAAA,EAAA,SAAA,EAAA,EAAA,KAAA,EAAA,EAAA,KAAA,KAAA,OAAA,EAAA,OAAA,EAAA,EAAA,IAAA,EAAA,CAAA,EAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,KAAA,EAAA,KAAA,EAAA,EAAA,EAAA,MAAA,KAAA,EAAA,OAAA,EAAA,QAAA,CAAA,MAAA,EAAA,GAAA,MAAA,GAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,GAAA,EAAA,CAAA,GAAA,SAAA,KAAA,EAAA,EAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,QAAA,KAAA,GAAA,EAAA,EAAA,MAAA,OAAA,GAAA,EAAA,EAAA,OAAA,MAAA,IAAA,EAAA,IAAA,IAAA,EAAA,IAAA,CAAA,EAAA,EAAA,SAAA,GAAA,IAAA,EAAA,MAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,CAAA,EAAA,MAAA,EAAA,GAAA,MAAA,GAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,EAAA,MAAA,GAAA,GAAA,EAAA,MAAA,EAAA,GAAA,CAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,KAAA,MAAA,SAAA,EAAA,EAAA,KAAA,EAAA,GAAA,MAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,EAAA,QAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,GAAA,MAAA,EAAA,GAAA,MAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAAA,MAAA,GAAA,CAAA,CAAA,EAAA,OAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAFA,IAAA,EAAA,QAAA,sBAEA,OAAO,iBAAiB,OAAQ,WACxB,IAAA,EAAS,SAAS,cAAc,WACtC,SAAS,cAAc,UAAU,iBAAiB,QAAS,WAF7D,OAAA,EAAA,UAAA,OAAA,EAAA,WAAA,IAAA,EAAA,OAAA,EAAA,KAAA,SAAA,GAAA,OAGI,EAAO,YAAc,KACf,EAAK,IAAI,EAAA,IACZ,QAAQ,YAAa,SAAS,cAAc,YAAY,OAC3D,EAAA,MAAM,GAAI,KAAK,WACb,EAAO,YAAc,KACpB,WACD,EAAO,YAAc,MAT3B,CAAA","file":"copy-text-as-html.ec19b329.js","sourceRoot":"..","sourcesContent":["import {DT, suppressDTWarnings} from \"./DT\";\n\n// Debug log strings should be short, since they are compiled into the production build.\n// TODO: Compile debug logging code out of production builds?\n// tslint:disable-next-line: no-empty\nlet debugLog: (s: string) => void = (s: string) => {};\nlet showWarnings = true;\n// Workaround for:\n// - IE9 (can't bind console functions directly), and\n// - Edge Issue #14495220 (referencing `console` without F12 Developer Tools can cause an exception)\nfunction warnOrLog() {\n  // tslint:disable-next-line: no-console\n  (console.warn || console.log).apply(console, arguments);\n}\nconst warn = warnOrLog.bind(\"[clipboard-polyfill]\");\n\nconst TEXT_PLAIN = \"text/plain\";\n\nexport {DT};\n\nexport function setDebugLog(f: (s: string) => void): void {\n  debugLog = f;\n}\n\nexport function suppressWarnings() {\n  showWarnings = false;\n  suppressDTWarnings();\n}\n\nexport async function write(data: DT): Promise<void> {\n  if (showWarnings && !data.getData(TEXT_PLAIN)) {\n    warn(\"clipboard.write() was called without a \" +\n      \"`text/plain` data type. On some platforms, this may result in an \" +\n      \"empty clipboard. Call clipboard.suppressWarnings() \" +\n      \"to suppress this warning.\");\n  }\n\n  // Internet Explorer\n  if (seemToBeInIE()) {\n    if (writeIE(data)) {\n      return;\n    } else {\n      throw new Error(\"Copying failed, possibly because the user rejected it.\");\n    }\n  }\n\n  if (execCopy(data)) {\n    debugLog(\"regular execCopy worked\");\n    return;\n  }\n\n  // Success detection on Edge is not possible, due to bugs in all 4\n  // detection mechanisms we could try to use. Assume success.\n  if (navigator.userAgent.indexOf(\"Edge\") > -1) {\n    debugLog(\"UA \\\"Edge\\\" => assuming success\");\n    return;\n  }\n\n  // Fallback 1 for desktop Safari.\n  if (copyUsingTempSelection(document.body, data)) {\n    debugLog(\"copyUsingTempSelection worked\");\n    return;\n  }\n\n  // Fallback 2 for desktop Safari.\n  if (copyUsingTempElem(data)) {\n    debugLog(\"copyUsingTempElem worked\");\n    return;\n  }\n\n  // Fallback for iOS Safari.\n  const text = data.getData(TEXT_PLAIN);\n  if (text !== undefined && copyTextUsingDOM(text)) {\n    debugLog(\"copyTextUsingDOM worked\");\n    return;\n  }\n\n  throw new Error(\"Copy command failed.\");\n}\n\nexport async function writeText(s: string): Promise<void> {\n  if (navigator.clipboard && navigator.clipboard.writeText) {\n    debugLog(\"Using `navigator.clipboard.writeText()`.\");\n    return navigator.clipboard.writeText(s);\n  }\n  return write(DTFromText(s));\n}\n\nexport async function read(): Promise<DT> {\n  return DTFromText(await readText());\n}\n\nexport async function readText(): Promise<string> {\n  if (navigator.clipboard && navigator.clipboard.readText) {\n    debugLog(\"Using `navigator.clipboard.readText()`.\");\n    return navigator.clipboard.readText();\n  }\n  if (seemToBeInIE()) {\n    debugLog(\"Reading text using IE strategy.\");\n    return readIE();\n  }\n  throw new Error(\"Read is not supported in your browser.\");\n}\n\nlet useStarShown = false;\nfunction useStar(): void {\n  if (useStarShown) {\n    return;\n  }\n  if (showWarnings) {\n    warn(\"The deprecated default object of `clipboard-polyfill` was called. Please switch to `import * as clipboard from \\\"clipboard-polyfill\\\"` and see https://github.com/lgarron/clipboard-polyfill/issues/101 for more info.\");\n  }\n  useStarShown = true;\n}\n\nconst ClipboardPolyfillDefault = {\n  DT,\n  setDebugLog(f: (s: string) => void): void {\n    useStar();\n    return setDebugLog(f);\n  },\n  suppressWarnings() {\n    useStar();\n    return suppressWarnings();\n  },\n  async write(data: DT): Promise<void> {\n    useStar();\n    return write(data);\n  },\n  async writeText(s: string): Promise<void> {\n    useStar();\n    return writeText(s);\n  },\n  async read(): Promise<DT> {\n    useStar();\n    return read();\n  },\n  async readText(): Promise<string> {\n    useStar();\n    return readText();\n  },\n};\n\nexport default ClipboardPolyfillDefault;\n\n/******** Implementations ********/\n\nclass FallbackTracker {\n  public success: boolean = false;\n}\n\nfunction copyListener(tracker: FallbackTracker, data: DT, e: ClipboardEvent): void {\n  debugLog(\"listener called\");\n  tracker.success = true;\n  data.forEach((value: string, key: string) => {\n    const clipboardData = e.clipboardData!;\n    clipboardData.setData(key, value);\n    if (key === TEXT_PLAIN && clipboardData.getData(key) !== value) {\n      debugLog(\"setting text/plain failed\");\n      tracker.success = false;\n    }\n  });\n  e.preventDefault();\n}\n\nfunction execCopy(data: DT): boolean {\n  const tracker = new FallbackTracker();\n  const listener = copyListener.bind(this, tracker, data);\n\n  document.addEventListener(\"copy\", listener);\n  try {\n    // We ignore the return value, since FallbackTracker tells us whether the\n    // listener was called. It seems that checking the return value here gives\n    // us no extra information in any browser.\n    document.execCommand(\"copy\");\n  } finally {\n    document.removeEventListener(\"copy\", listener);\n  }\n  return tracker.success;\n}\n\n// Temporarily select a DOM element, so that `execCommand()` is not rejected.\nfunction copyUsingTempSelection(e: HTMLElement, data: DT): boolean {\n  selectionSet(e);\n  const success = execCopy(data);\n  selectionClear();\n  return success;\n}\n\n// Create a temporary DOM element to select, so that `execCommand()` is not\n// rejected.\nfunction copyUsingTempElem(data: DT): boolean {\n  const tempElem = document.createElement(\"div\");\n  // Setting an individual property does not support `!important`, so we set the\n  // whole style instead of just the `-webkit-user-select` property.\n  tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n  // Place some text in the elem so that Safari has something to select.\n  tempElem.textContent = \"temporary element\";\n  document.body.appendChild(tempElem);\n\n  const success = copyUsingTempSelection(tempElem, data);\n\n  document.body.removeChild(tempElem);\n  return success;\n}\n\n// Uses shadow DOM.\nfunction copyTextUsingDOM(str: string): boolean {\n  debugLog(\"copyTextUsingDOM\");\n\n  const tempElem = document.createElement(\"div\");\n  // Setting an individual property does not support `!important`, so we set the\n  // whole style instead of just the `-webkit-user-select` property.\n  tempElem.setAttribute(\"style\", \"-webkit-user-select: text !important\");\n  // Use shadow DOM if available.\n  let spanParent: Node = tempElem;\n  if (tempElem.attachShadow) {\n    debugLog(\"Using shadow DOM.\");\n    spanParent = tempElem.attachShadow({mode: \"open\"});\n  }\n\n  const span = document.createElement(\"span\");\n  span.innerText = str;\n\n  spanParent.appendChild(span);\n  document.body.appendChild(tempElem);\n  selectionSet(span);\n\n  const result = document.execCommand(\"copy\");\n\n  selectionClear();\n  document.body.removeChild(tempElem);\n\n  return result;\n}\n\n/******** Selection ********/\n\nfunction selectionSet(elem: Element): void {\n  const sel = document.getSelection();\n  if (sel) {\n    const range = document.createRange();\n    range.selectNodeContents(elem);\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n}\n\nfunction selectionClear(): void {\n  const sel = document.getSelection();\n  if (sel) {\n    sel.removeAllRanges();\n  }\n}\n\n/******** Convenience ********/\n\nfunction DTFromText(s: string): DT {\n  const dt = new DT();\n  dt.setData(TEXT_PLAIN, s);\n  return dt;\n}\n\n/******** Internet Explorer ********/\n\ninterface IEWindow extends Window {\n  clipboardData: {\n    setData: (key: string, value: string) => boolean;\n    // Always results in a string: https://msdn.microsoft.com/en-us/library/ms536436(v=vs.85).aspx\n    getData: (key: string) => string;\n  };\n}\n\nfunction seemToBeInIE(): boolean {\n  return typeof ClipboardEvent === \"undefined\" &&\n         typeof (window as IEWindow).clipboardData !== \"undefined\" &&\n         typeof (window as IEWindow).clipboardData.setData !== \"undefined\";\n}\n\nfunction writeIE(data: DT): boolean {\n  // IE supports text or URL, but not HTML: https://msdn.microsoft.com/en-us/library/ms536744(v=vs.85).aspx\n  // TODO: Write URLs to `text/uri-list`? https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types\n  const text = data.getData(TEXT_PLAIN);\n  if (text !== undefined) {\n    return (window as IEWindow).clipboardData.setData(\"Text\", text);\n  }\n\n  throw new Error((\"No `text/plain` value was specified.\"));\n}\n\n// Returns \"\" if the read failed, e.g. because the user rejected the permission.\nasync function readIE(): Promise<string> {\n  const text = (window as IEWindow).clipboardData.getData(\"Text\");\n  if (text === \"\") {\n    throw new Error(\"Empty clipboard or could not read plain text from clipboard\");\n  }\n  return text;\n}\n","const dataTypes = [\n  \"text/plain\",\n  \"text/html\",\n];\n\n// TODO: Dedup with main file?\nfunction warnOrLog() {\n  // tslint:disable-next-line: no-console\n  (console.warn || console.log).call(arguments);\n} // IE9 workaround (can't bind console functions).\nconst warn = warnOrLog.bind(console, \"[clipboard-polyfill]\");\nlet showWarnings = true;\nexport function suppressDTWarnings() {\n  showWarnings = false;\n}\n\nexport class DT {\n  private m: {[key: string]: string} = {};\n\n  public setData(type: string, value: string): void {\n    if (showWarnings && dataTypes.indexOf(type) === -1) {\n      warn(\"Unknown data type: \" + type, \"Call clipboard.suppressWarnings() \" +\n        \"to suppress this warning.\");\n    }\n\n    this.m[type] = value;\n  }\n\n  public getData(type: string): string | undefined {\n    return this.m[type];\n  }\n\n  // TODO: Provide an iterator consistent with DataTransfer.\n  public forEach(f: (value: string, key: string) => void): void {\n    // tslint:disable-next-line: forin\n    for (const k in this.m) {\n      f(this.m[k], k);\n    }\n  }\n}\n","import { write, DT } from \"clipboard-polyfill\"\n\nwindow.addEventListener(\"load\", function () {\n  const status = document.querySelector(\".status\");\n  document.querySelector(\"button\").addEventListener(\"click\", async function () {\n    status.textContent = \"…\";\n    const dt = new DT();\n    dt.setData(\"text/html\", document.querySelector(\"textarea\").value);\n    write(dt).then(function () {\n      status.textContent = \"✅\";\n    }, function () {\n      status.textContent = \"❌\";\n    })\n  });\n})\n"]}